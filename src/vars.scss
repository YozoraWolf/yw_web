@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@100;300;400;500;700;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Lato:wght@100;300;400;700&display=swap');
@import "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/devicon.min.css";
@import url('https://fonts.googleapis.com/css2?family=Zen+Maru+Gothic&display=swap');

$primary-color: rgb(14, 107, 194);
$bg-color: #1e1e1e;
$text-color: rgb(255, 255, 255);
$title-size: 3rem;

$h1_size: 30px;
// RadialProg vars
$stroke-color: $primary-color;
$inner-stroke-color: lighten($bg-color, 4%);

body {
    margin: 0;
    padding: 0;
    background-color: $bg-color;
}

:root {

    --jp-font: "Zen Maru Gothic", sans-serif;
    --lat-font: "Lato", sans-serif;
    --def-font: var(--lat-font);
}
$ffamily: var(--def-font);



.txt,
div,
span,
h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: $ffamily;
    color: $text-color;
}

svg path {
    color: $text-color;
    fill: $text-color;
}

// TODO: Work on this so that Lato works as a fall back for other letters other than JP.
// Jap Font Override
@font-face {
    font-family: 'Zen Maru Gothic' format("truetype");
    src: 'Zen Maru Gothic';
        unicode-range: U+3000-303F, // CJK Symbols and Punctuation
        U+3040-309F, // Hiragana
        U+30A0-30FF, // Katakana
        U+4E00-9FBF, // Common and Uncommon Kanji
        U+FF00-FFEF; // Full-width Roman characters and Half-width Katakana
}

.v-popper--theme-wolf .v-popper__inner div div {
    font-family: $ffamily;
    font-size: 20px;
}

// Define screen sizes
$small-screen: 578px; // small screens (phones)
$medium-screen: 770px; // medium screens (tablets)
$large-screen: 994px; // large screens (desktops)

$font-sizes: (default: 4rem, small: 6rem, medium: 8rem, large: 10rem);

// Define mixin for responsive font sizes and a respective factor to adjust based on a predefined set
@mixin responsive-font-size($sizes, $factor: 1.0) {
  font-size: map-get($sizes, 'default') * $factor;

  @media screen and (min-width: $small-screen) {
    font-size: map-get($sizes, 'small') * $factor !important;
  }

  @media screen and (min-width: $medium-screen) {
    font-size: map-get($sizes, 'medium') * $factor !important;
  }

  @media screen and (min-width: $large-screen) {
    font-size: map-get($sizes, 'large') * $factor !important;
  }
}